use crate::run_test;

#[test] fn color_space_device_n_2() { run_test("color_space_device_n_2", false, None); }
#[test] fn image_jbig2_2() { run_test("image_jbig2_2", true, Some("..=4")); }
#[test] fn integration_coat_of_arms() { run_test("integration_coat_of_arms", false, None); }
#[test] fn integration_diagram() { run_test("integration_diagram", false, None); }
#[test] fn integration_matplotlib_2() { run_test("integration_matplotlib_2", false, None); }
#[test] fn issue_clipping_panic() { run_test("issue_clipping_panic", false, None); }
#[test] fn issue_cmap_lookup() { run_test("issue_cmap_lookup", false, Some("..=0")); }
#[test] fn issue_cubic_start_end() { run_test("issue_cubic_start_end", false, None); }
#[test] fn issue_predictor_with_null() { run_test("issue_predictor_with_null", false, None); }
#[test] fn issue_scaled_glyph() { run_test("issue_scaled_glyph", false, None); }
#[test] fn issue_stream_abbreviations() { run_test("issue_stream_abbreviations", false, Some("..=0")); }
#[test] fn image_mask_missing_bpc() { run_test("image_mask_missing_bpc", false, None); }
#[test] fn image_rgb16() { run_test("image_rgb16", false, None); }
#[test] fn image_rgb8() { run_test("image_rgb8", false, None); }
#[test] fn image_rgba16() { run_test("image_rgba16", false, None); }
#[test] fn image_rgba8() { run_test("image_rgba8", false, None); }
#[test] fn image_rgba8_icc() { run_test("image_rgba8_icc", false, None); }
#[test] fn page_media_box_bottom_left() { run_test("page_media_box_bottom_left", false, None); }
#[test] fn page_media_box_bottom_right() { run_test("page_media_box_bottom_right", false, None); }
#[test] fn page_media_box_top_left() { run_test("page_media_box_top_left", false, None); }
#[test] fn page_media_box_top_right() { run_test("page_media_box_top_right", false, None); }
#[test] fn page_media_box_zoomed_out() { run_test("page_media_box_zoomed_out", false, None); }
#[test] fn page_rotation_180() { run_test("page_rotation_180", false, None); }
#[test] fn page_rotation_270() { run_test("page_rotation_270", false, None); }
#[test] fn page_rotation_90() { run_test("page_rotation_90", false, None); }
#[test] fn page_rotation_none() { run_test("page_rotation_none", false, None); }
#[test] fn path_rendering_1() { run_test("path_rendering_1", false, None); }
#[test] fn path_rendering_2() { run_test("path_rendering_2", false, None); }
#[test] fn path_rendering_3() { run_test("path_rendering_3", false, None); }
#[test] fn path_rendering_4() { run_test("path_rendering_4", false, None); }
#[test] fn path_rendering_5() { run_test("path_rendering_5", false, None); }
#[test] fn path_rendering_6() { run_test("path_rendering_6", false, None); }
#[test] fn path_rendering_7() { run_test("path_rendering_7", false, None); }
#[test] fn path_rendering_8() { run_test("path_rendering_8", false, None); }
#[test] fn path_rendering_9() { run_test("path_rendering_9", false, None); }
#[test] fn path_rendering_10() { run_test("path_rendering_10", false, None); }
#[test] fn path_rendering_11() { run_test("path_rendering_11", false, None); }
#[test] fn path_rendering_12() { run_test("path_rendering_12", false, None); }
#[test] fn path_rendering_13() { run_test("path_rendering_13", false, None); }
#[test] fn path_rendering_14() { run_test("path_rendering_14", false, None); }
#[test] fn path_rendering_15() { run_test("path_rendering_15", false, None); }
#[test] fn path_rendering_16() { run_test("path_rendering_16", false, None); }
#[test] fn path_rendering_17() { run_test("path_rendering_17", false, None); }
#[test] fn path_rendering_dash_array_0_phase() { run_test("path_rendering_dash_array_0_phase", false, None); }
#[test] fn pattern_shading_background() { run_test("pattern_shading_background", false, None); }
#[test] fn pattern_shading_bbox() { run_test("pattern_shading_bbox", false, None); }
#[test] fn pattern_shading_on_text() { run_test("pattern_shading_on_text", false, None); }
#[test] fn pattern_shading_type0_7() { run_test("pattern_shading_type0_7", false, None); }
#[test] fn pattern_shading_type1_1() { run_test("pattern_shading_type1_1", false, None); }
#[test] fn pattern_shading_type1_2() { run_test("pattern_shading_type1_2", false, None); }
#[test] fn pattern_shading_type1_3() { run_test("pattern_shading_type1_3", false, None); }
#[test] fn pattern_shading_type1_4() { run_test("pattern_shading_type1_4", false, None); }
#[test] fn pattern_shading_type1_5() { run_test("pattern_shading_type1_5", false, None); }
#[test] fn pattern_shading_type1_6() { run_test("pattern_shading_type1_6", false, None); }
#[test] fn pattern_shading_type1_transform() { run_test("pattern_shading_type1_transform", false, None); }
#[test] fn pattern_shading_type2_1() { run_test("pattern_shading_type2_1", false, None); }
#[test] fn pattern_shading_type2_2() { run_test("pattern_shading_type2_2", false, None); }
#[test] fn pattern_shading_type2_3_stops() { run_test("pattern_shading_type2_3_stops", false, None); }
#[test] fn pattern_shading_type2_many() { run_test("pattern_shading_type2_many", false, None); }
#[test] fn pattern_shading_type2_no_extend() { run_test("pattern_shading_type2_no_extend", false, None); }
#[test] fn pattern_shading_type2_no_extend_with_background() { run_test("pattern_shading_type2_no_extend_with_background", false, None); }
#[test] fn pattern_shading_type2_out_of_viewport() { run_test("pattern_shading_type2_out_of_viewport", false, None); }
#[test] fn pattern_shading_type2_slanted() { run_test("pattern_shading_type2_slanted", false, None); }
#[test] fn pattern_shading_type3_1() { run_test("pattern_shading_type3_1", false, None); }
#[test] fn pattern_shading_type3_2() { run_test("pattern_shading_type3_2", false, None); }
#[test] fn pattern_shading_type3_3() { run_test("pattern_shading_type3_3", false, None); }
#[test] fn pattern_shading_type3_4() { run_test("pattern_shading_type3_4", false, None); }
#[test] fn pattern_shading_type3_collection() { run_test("pattern_shading_type3_collection", true, None); }
#[test] fn pattern_shading_type4_1() { run_test("pattern_shading_type4_1", true, None); }
#[test] fn pattern_shading_type4_2() { run_test("pattern_shading_type4_2", false, None); }
#[test] fn pattern_shading_type5() { run_test("pattern_shading_type5", true, None); }
#[test] fn rendering_conflation_artifacts() { run_test("rendering_conflation_artifacts", false, Some("2..=2")); }
#[test] fn shading_operator_1() { run_test("shading_operator_1", false, None); }
#[test] fn shading_operator_2() { run_test("shading_operator_2", false, None); }
#[test] fn stream_ccit_not_enough_data() { run_test("stream_ccit_not_enough_data", false, None); }
#[test] fn stream_flate_bpc_1() { run_test("stream_flate_bpc_1", false, Some("..=0")); }
#[test] fn stream_jpx_1() { run_test("stream_jpx_1", false, Some("2..=2")); }
#[test] fn stream_jpx_3() { run_test("stream_jpx_3", false, Some("2..=2")); }
#[test] fn stream_jpx_5() { run_test("stream_jpx_5", false, None); }
#[test] fn stream_jpx_6() { run_test("stream_jpx_6", false, None); }
#[test] fn text_filled_complex_paint() { run_test("text_filled_complex_paint", false, None); }
#[test] fn text_rendering_1() { run_test("text_rendering_1", false, None); }
#[test] fn text_rendering_2() { run_test("text_rendering_2", false, None); }
#[test] fn text_rendering_3() { run_test("text_rendering_3", false, None); }
#[test] fn text_rendering_4() { run_test("text_rendering_4", false, None); }
#[test] fn text_rendering_5() { run_test("text_rendering_5", false, None); }
#[test] fn text_rendering_clipping() { run_test("text_rendering_clipping", false, None); }
#[test] fn text_rendering_stroking_clipping() { run_test("text_rendering_stroking_clipping", false, None); }
#[test] fn text_stroked_complex_paint() { run_test("text_stroked_complex_paint", false, None); }
#[test] fn text_with_rise() { run_test("text_with_rise", false, None); }
#[test] fn xobject_1() { run_test("xobject_1", false, None); }
#[test] fn xobject_matrix() { run_test("xobject_matrix", false, None); }
#[test] fn xobject_with_fill_opacity() { run_test("xobject_with_fill_opacity", false, None); }
#[test] fn mmtype1() { run_test("mmtype1", false, None); }
#[test] fn jbig2_symbol_offset() { run_test("jbig2_symbol_offset", false, None); }
#[test] fn devicen() { run_test("devicen", false, None); }
#[test] fn issue2642() { run_test("issue2642", true, Some("..=0")); }
#[test] fn calgray() { run_test("calgray", false, None); }
#[test] fn calrgb() { run_test("calrgb", false, Some("..=7")); }